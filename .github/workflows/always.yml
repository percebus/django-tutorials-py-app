name: Verification
on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      DEBUG: ${{ secrets.DEBUG }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    services: # "Container operations are only supported on Linux runners"
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: # "postgres container does not provide a healthcheck"
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup python@3.10
        uses: actions/setup-python@v4
        with:
          architecture: 'x64'
          python-version: '3.10'
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: lint
        run: npm run lint

      - name: manage.py migrate # FIXME copy postgres files instead
        run: python webapp/manage.py migrate
      - name: manage.py test polls
        run: python webapp/manage.py test polls


  tests:
    if: github.ref == 'refs/heads/main'
    needs: test
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    name: Lint @ python:${{ matrix.python }}@${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls # -la fails in windows

      - name: setup node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup python@3.X
        uses: actions/setup-python@v4
        with:
          architecture: 'x64'
          python-version: ${{ matrix.python }}
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: lint
        run: npm run lint


  codeQL:
#   if: github.ref == 'refs/heads/main' # TODO?
    needs: test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    name: 'CodeQL: ${{ matrix.language }}'
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: CodeQL
      uses: github/codeql-action/analyze@v2
